
%
% File generated by generate_bindings.gleam.
%

-module(raylib_ffi).
-on_load(init/0).
-export([
  init/0,
rl_load_draw_quad/0,
rl_load_draw_cube/0,
rl_bind_image_texture/4,
rl_get_shader_buffer_size/1,
rl_copy_shader_buffer/5,
rl_bind_shader_buffer/2,
rl_unload_shader_buffer/1,
rl_compute_shader_dispatch/3,
rl_load_compute_shader_program/1,
rl_set_uniform_sampler/2,
rl_get_location_attrib/2,
rl_get_location_uniform/2,
rl_unload_shader_program/1,
rl_load_shader_program/2,
rl_compile_shader/2,
rl_load_shader_code/2,
rl_unload_framebuffer/1,
rl_framebuffer_complete/1,
rl_framebuffer_attach/5,
rl_load_framebuffer/2,
rl_unload_texture/1,
rl_load_texture_depth/3,
rl_draw_vertex_array_instanced/3,
rl_draw_vertex_array/2,
rl_set_vertex_attribute_divisor/2,
rl_unload_vertex_buffer/1,
rl_unload_vertex_array/1,
rl_load_vertex_array/0,
rl_set_texture/1,
rl_check_render_batch_limit/1,
rl_draw_render_batch_active/0,
rl_get_shader_id_default/0,
rl_get_texture_id_default/0,
rl_get_framebuffer_height/0,
rl_set_framebuffer_height/1,
rl_get_framebuffer_width/0,
rl_set_framebuffer_width/1,
rl_get_version/0,
rlgl_close/0,
rlgl_init/2,
rl_set_blend_factors_separate/6,
rl_set_blend_factors/3,
rl_set_blend_mode/1,
rl_check_errors/0,
rl_clear_screen_buffers/0,
rl_is_stereo_render_enabled/0,
rl_disable_stereo_render/0,
rl_enable_stereo_render/0,
rl_disable_smooth_lines/0,
rl_enable_smooth_lines/0,
rl_get_line_width/0,
rl_set_line_width/1,
rl_disable_wire_mode/0,
rl_enable_point_mode/0,
rl_enable_wire_mode/0,
rl_scissor/4,
rl_disable_scissor_test/0,
rl_enable_scissor_test/0,
rl_set_cull_face/1,
rl_disable_backface_culling/0,
rl_enable_backface_culling/0,
rl_disable_depth_mask/0,
rl_enable_depth_mask/0,
rl_disable_depth_test/0,
rl_enable_depth_test/0,
rl_disable_color_blend/0,
rl_enable_color_blend/0,
rl_blit_framebuffer/9,
rl_active_draw_buffers/1,
rl_disable_framebuffer/0,
rl_enable_framebuffer/1,
rl_disable_shader/0,
rl_enable_shader/1,
rl_cubemap_parameters/3,
rl_texture_parameters/3,
rl_disable_texture_cubemap/0,
rl_enable_texture_cubemap/1,
rl_disable_texture/0,
rl_enable_texture/1,
rl_active_texture_slot/1,
rl_disable_vertex_attribute/1,
rl_enable_vertex_attribute/1,
rl_disable_vertex_buffer_element/0,
rl_enable_vertex_buffer_element/1,
rl_disable_vertex_buffer/0,
rl_enable_vertex_buffer/1,
rl_disable_vertex_array/0,
rl_enable_vertex_array/1,
rl_color4f/4,
rl_color3f/3,
rl_normal3f/3,
rl_tex_coord2f/2,
rl_vertex3f/3,
rl_vertex2f/2,
rl_vertex2i/2,
rl_end/0,
rl_begin/1,
rl_viewport/4,
rl_scalef/3,
rl_rotatef/4,
rl_translatef/3,
rl_load_identity/0,
rl_pop_matrix/0,
rl_push_matrix/0,
rl_matrix_mode/1,
set_audio_stream_buffer_size_default/1,
get_master_volume/0,
set_master_volume/1,
is_audio_device_ready/0,
close_audio_device/0,
init_audio_device/0,
draw_grid/2,
text_to_integer/1,
text_find_index/2,
text_length/1,
text_is_equal/2,
get_codepoint_count/1,
measure_text/2,
set_text_line_spacing/1,
draw_text/5,
draw_fps/2,
get_pixel_data_size/3,
get_color/1,
color_alpha_blend/3,
color_alpha/2,
color_contrast/2,
color_brightness/2,
color_tint/2,
color_from_hsv/3,
color_to_int/1,
fade/2,
draw_texture_pro/6,
draw_texture_rec/4,
draw_texture_ex/5,
draw_texture_v/3,
draw_texture/4,
set_texture_wrap/2,
set_texture_filter/2,
unload_texture/1,
is_texture_ready/1,
load_texture/1,
check_collision_point_line/4,
check_collision_point_triangle/4,
check_collision_point_circle/3,
check_collision_point_rec/2,
check_collision_circle_rec/3,
check_collision_circles/4,
check_collision_recs/2,
get_spline_point_bezier_cubic/5,
get_spline_point_bezier_quad/4,
get_spline_point_catmull_rom/5,
get_spline_point_basis/5,
get_spline_point_linear/3,
draw_spline_segment_bezier_cubic/6,
draw_spline_segment_bezier_quadratic/5,
draw_spline_segment_catmull_rom/6,
draw_spline_segment_basis/6,
draw_spline_segment_linear/4,
draw_poly_lines_ex/6,
draw_poly_lines/5,
draw_poly/5,
draw_triangle_lines/4,
draw_triangle/4,
draw_rectangle_rounded_lines/5,
draw_rectangle_rounded/4,
draw_rectangle_lines_ex/3,
draw_rectangle_lines/5,
draw_rectangle_gradient_ex/5,
draw_rectangle_gradient_h/6,
draw_rectangle_gradient_v/6,
draw_rectangle_pro/4,
draw_rectangle_rec/2,
draw_rectangle_v/3,
draw_rectangle/5,
draw_ring_lines/7,
draw_ring/7,
draw_ellipse_lines/5,
draw_ellipse/5,
draw_circle_lines_v/3,
draw_circle_lines/4,
draw_circle_v/3,
draw_circle_gradient/5,
draw_circle_sector_lines/6,
draw_circle_sector/6,
draw_circle/4,
draw_line_bezier/4,
draw_line_ex/4,
draw_line_v/3,
draw_line/5,
draw_pixel_v/2,
draw_pixel/3,
set_shapes_texture/2,
get_gesture_pinch_angle/0,
get_gesture_pinch_vector/0,
get_gesture_drag_angle/0,
get_gesture_drag_vector/0,
get_gesture_hold_duration/0,
get_gesture_detected/0,
is_gesture_detected/1,
set_gestures_enabled/1,
get_touch_point_count/0,
get_touch_point_id/1,
get_touch_position/1,
get_touch_y/0,
get_touch_x/0,
set_mouse_cursor/1,
get_mouse_wheel_move_v/0,
get_mouse_wheel_move/0,
set_mouse_scale/2,
set_mouse_offset/2,
set_mouse_position/2,
get_mouse_delta/0,
get_mouse_position/0,
get_mouse_y/0,
get_mouse_x/0,
is_mouse_button_up/1,
is_mouse_button_released/1,
is_mouse_button_down/1,
is_mouse_button_pressed/1,
set_gamepad_mappings/1,
get_gamepad_axis_movement/2,
get_gamepad_axis_count/1,
get_gamepad_button_pressed/0,
is_gamepad_button_up/2,
is_gamepad_button_released/2,
is_gamepad_button_down/2,
is_gamepad_button_pressed/2,
is_gamepad_available/1,
set_exit_key/1,
get_char_pressed/0,
get_key_pressed/0,
is_key_up/1,
is_key_released/1,
is_key_down/1,
is_key_pressed_repeat/1,
is_key_pressed/1,
stop_automation_event_recording/0,
start_automation_event_recording/0,
set_automation_event_base_frame/1,
is_file_dropped/0,
is_path_file/1,
change_directory/1,
get_file_length/1,
is_file_extension/2,
directory_exists/1,
file_exists/1,
set_trace_log_level/1,
open_url/1,
set_config_flags/1,
take_screenshot/1,
get_random_value/2,
set_random_seed/1,
poll_input_events/0,
swap_screen_buffer/0,
get_fps/0,
get_frame_time/0,
set_target_fps/1,
end_vr_stereo_mode/0,
end_scissor_mode/0,
begin_scissor_mode/4,
end_blend_mode/0,
begin_blend_mode/1,
end_shader_mode/0,
end_texture_mode/0,
end_mode3_d/0,
end_mode2_d/0,
end_drawing/0,
begin_drawing/0,
clear_background/1,
is_cursor_on_screen/0,
disable_cursor/0,
enable_cursor/0,
is_cursor_hidden/0,
hide_cursor/0,
show_cursor/0,
disable_event_waiting/0,
enable_event_waiting/0,
set_clipboard_text/1,
get_window_scale_dpi/0,
get_window_position/0,
get_monitor_refresh_rate/1,
get_monitor_physical_height/1,
get_monitor_physical_width/1,
get_monitor_height/1,
get_monitor_width/1,
get_monitor_position/1,
get_current_monitor/0,
get_monitor_count/0,
get_render_height/0,
get_render_width/0,
get_screen_height/0,
get_screen_width/0,
set_window_focused/0,
set_window_opacity/1,
set_window_size/2,
set_window_max_size/2,
set_window_min_size/2,
set_window_monitor/1,
set_window_position/2,
set_window_title/1,
restore_window/0,
minimize_window/0,
maximize_window/0,
toggle_borderless_windowed/0,
toggle_fullscreen/0,
clear_window_state/1,
set_window_state/1,
is_window_state/1,
is_window_resized/0,
is_window_focused/0,
is_window_maximized/0,
is_window_minimized/0,
is_window_hidden/0,
is_window_fullscreen/0,
is_window_ready/0,
window_should_close/0,
close_window/0,
init_window/3
]).
-nifs([
rl_load_draw_quad/0,
rl_load_draw_cube/0,
rl_bind_image_texture/4,
rl_get_shader_buffer_size/1,
rl_copy_shader_buffer/5,
rl_bind_shader_buffer/2,
rl_unload_shader_buffer/1,
rl_compute_shader_dispatch/3,
rl_load_compute_shader_program/1,
rl_set_uniform_sampler/2,
rl_get_location_attrib/2,
rl_get_location_uniform/2,
rl_unload_shader_program/1,
rl_load_shader_program/2,
rl_compile_shader/2,
rl_load_shader_code/2,
rl_unload_framebuffer/1,
rl_framebuffer_complete/1,
rl_framebuffer_attach/5,
rl_load_framebuffer/2,
rl_unload_texture/1,
rl_load_texture_depth/3,
rl_draw_vertex_array_instanced/3,
rl_draw_vertex_array/2,
rl_set_vertex_attribute_divisor/2,
rl_unload_vertex_buffer/1,
rl_unload_vertex_array/1,
rl_load_vertex_array/0,
rl_set_texture/1,
rl_check_render_batch_limit/1,
rl_draw_render_batch_active/0,
rl_get_shader_id_default/0,
rl_get_texture_id_default/0,
rl_get_framebuffer_height/0,
rl_set_framebuffer_height/1,
rl_get_framebuffer_width/0,
rl_set_framebuffer_width/1,
rl_get_version/0,
rlgl_close/0,
rlgl_init/2,
rl_set_blend_factors_separate/6,
rl_set_blend_factors/3,
rl_set_blend_mode/1,
rl_check_errors/0,
rl_clear_screen_buffers/0,
rl_is_stereo_render_enabled/0,
rl_disable_stereo_render/0,
rl_enable_stereo_render/0,
rl_disable_smooth_lines/0,
rl_enable_smooth_lines/0,
rl_get_line_width/0,
rl_set_line_width/1,
rl_disable_wire_mode/0,
rl_enable_point_mode/0,
rl_enable_wire_mode/0,
rl_scissor/4,
rl_disable_scissor_test/0,
rl_enable_scissor_test/0,
rl_set_cull_face/1,
rl_disable_backface_culling/0,
rl_enable_backface_culling/0,
rl_disable_depth_mask/0,
rl_enable_depth_mask/0,
rl_disable_depth_test/0,
rl_enable_depth_test/0,
rl_disable_color_blend/0,
rl_enable_color_blend/0,
rl_blit_framebuffer/9,
rl_active_draw_buffers/1,
rl_disable_framebuffer/0,
rl_enable_framebuffer/1,
rl_disable_shader/0,
rl_enable_shader/1,
rl_cubemap_parameters/3,
rl_texture_parameters/3,
rl_disable_texture_cubemap/0,
rl_enable_texture_cubemap/1,
rl_disable_texture/0,
rl_enable_texture/1,
rl_active_texture_slot/1,
rl_disable_vertex_attribute/1,
rl_enable_vertex_attribute/1,
rl_disable_vertex_buffer_element/0,
rl_enable_vertex_buffer_element/1,
rl_disable_vertex_buffer/0,
rl_enable_vertex_buffer/1,
rl_disable_vertex_array/0,
rl_enable_vertex_array/1,
rl_color4f/4,
rl_color3f/3,
rl_normal3f/3,
rl_tex_coord2f/2,
rl_vertex3f/3,
rl_vertex2f/2,
rl_vertex2i/2,
rl_end/0,
rl_begin/1,
rl_viewport/4,
rl_scalef/3,
rl_rotatef/4,
rl_translatef/3,
rl_load_identity/0,
rl_pop_matrix/0,
rl_push_matrix/0,
rl_matrix_mode/1,
set_audio_stream_buffer_size_default/1,
get_master_volume/0,
set_master_volume/1,
is_audio_device_ready/0,
close_audio_device/0,
init_audio_device/0,
draw_grid/2,
text_to_integer/1,
text_find_index/2,
text_length/1,
text_is_equal/2,
get_codepoint_count/1,
measure_text/2,
set_text_line_spacing/1,
draw_text/5,
draw_fps/2,
get_pixel_data_size/3,
get_color/1,
color_alpha_blend/3,
color_alpha/2,
color_contrast/2,
color_brightness/2,
color_tint/2,
color_from_hsv/3,
color_to_int/1,
fade/2,
draw_texture_pro/6,
draw_texture_rec/4,
draw_texture_ex/5,
draw_texture_v/3,
draw_texture/4,
set_texture_wrap/2,
set_texture_filter/2,
unload_texture/1,
is_texture_ready/1,
load_texture/1,
check_collision_point_line/4,
check_collision_point_triangle/4,
check_collision_point_circle/3,
check_collision_point_rec/2,
check_collision_circle_rec/3,
check_collision_circles/4,
check_collision_recs/2,
get_spline_point_bezier_cubic/5,
get_spline_point_bezier_quad/4,
get_spline_point_catmull_rom/5,
get_spline_point_basis/5,
get_spline_point_linear/3,
draw_spline_segment_bezier_cubic/6,
draw_spline_segment_bezier_quadratic/5,
draw_spline_segment_catmull_rom/6,
draw_spline_segment_basis/6,
draw_spline_segment_linear/4,
draw_poly_lines_ex/6,
draw_poly_lines/5,
draw_poly/5,
draw_triangle_lines/4,
draw_triangle/4,
draw_rectangle_rounded_lines/5,
draw_rectangle_rounded/4,
draw_rectangle_lines_ex/3,
draw_rectangle_lines/5,
draw_rectangle_gradient_ex/5,
draw_rectangle_gradient_h/6,
draw_rectangle_gradient_v/6,
draw_rectangle_pro/4,
draw_rectangle_rec/2,
draw_rectangle_v/3,
draw_rectangle/5,
draw_ring_lines/7,
draw_ring/7,
draw_ellipse_lines/5,
draw_ellipse/5,
draw_circle_lines_v/3,
draw_circle_lines/4,
draw_circle_v/3,
draw_circle_gradient/5,
draw_circle_sector_lines/6,
draw_circle_sector/6,
draw_circle/4,
draw_line_bezier/4,
draw_line_ex/4,
draw_line_v/3,
draw_line/5,
draw_pixel_v/2,
draw_pixel/3,
set_shapes_texture/2,
get_gesture_pinch_angle/0,
get_gesture_pinch_vector/0,
get_gesture_drag_angle/0,
get_gesture_drag_vector/0,
get_gesture_hold_duration/0,
get_gesture_detected/0,
is_gesture_detected/1,
set_gestures_enabled/1,
get_touch_point_count/0,
get_touch_point_id/1,
get_touch_position/1,
get_touch_y/0,
get_touch_x/0,
set_mouse_cursor/1,
get_mouse_wheel_move_v/0,
get_mouse_wheel_move/0,
set_mouse_scale/2,
set_mouse_offset/2,
set_mouse_position/2,
get_mouse_delta/0,
get_mouse_position/0,
get_mouse_y/0,
get_mouse_x/0,
is_mouse_button_up/1,
is_mouse_button_released/1,
is_mouse_button_down/1,
is_mouse_button_pressed/1,
set_gamepad_mappings/1,
get_gamepad_axis_movement/2,
get_gamepad_axis_count/1,
get_gamepad_button_pressed/0,
is_gamepad_button_up/2,
is_gamepad_button_released/2,
is_gamepad_button_down/2,
is_gamepad_button_pressed/2,
is_gamepad_available/1,
set_exit_key/1,
get_char_pressed/0,
get_key_pressed/0,
is_key_up/1,
is_key_released/1,
is_key_down/1,
is_key_pressed_repeat/1,
is_key_pressed/1,
stop_automation_event_recording/0,
start_automation_event_recording/0,
set_automation_event_base_frame/1,
is_file_dropped/0,
is_path_file/1,
change_directory/1,
get_file_length/1,
is_file_extension/2,
directory_exists/1,
file_exists/1,
set_trace_log_level/1,
open_url/1,
set_config_flags/1,
take_screenshot/1,
get_random_value/2,
set_random_seed/1,
poll_input_events/0,
swap_screen_buffer/0,
get_fps/0,
get_frame_time/0,
set_target_fps/1,
end_vr_stereo_mode/0,
end_scissor_mode/0,
begin_scissor_mode/4,
end_blend_mode/0,
begin_blend_mode/1,
end_shader_mode/0,
end_texture_mode/0,
end_mode3_d/0,
end_mode2_d/0,
end_drawing/0,
begin_drawing/0,
clear_background/1,
is_cursor_on_screen/0,
disable_cursor/0,
enable_cursor/0,
is_cursor_hidden/0,
hide_cursor/0,
show_cursor/0,
disable_event_waiting/0,
enable_event_waiting/0,
set_clipboard_text/1,
get_window_scale_dpi/0,
get_window_position/0,
get_monitor_refresh_rate/1,
get_monitor_physical_height/1,
get_monitor_physical_width/1,
get_monitor_height/1,
get_monitor_width/1,
get_monitor_position/1,
get_current_monitor/0,
get_monitor_count/0,
get_render_height/0,
get_render_width/0,
get_screen_height/0,
get_screen_width/0,
set_window_focused/0,
set_window_opacity/1,
set_window_size/2,
set_window_max_size/2,
set_window_min_size/2,
set_window_monitor/1,
set_window_position/2,
set_window_title/1,
restore_window/0,
minimize_window/0,
maximize_window/0,
toggle_borderless_windowed/0,
toggle_fullscreen/0,
clear_window_state/1,
set_window_state/1,
is_window_state/1,
is_window_resized/0,
is_window_focused/0,
is_window_maximized/0,
is_window_minimized/0,
is_window_hidden/0,
is_window_fullscreen/0,
is_window_ready/0,
window_should_close/0,
close_window/0,
init_window/3
]).

init() ->
	erlang:load_nif("raylib_ffi", 0).

rl_load_draw_quad() -> erlang:nif_error("NIF library not loaded").

rl_load_draw_cube() -> erlang:nif_error("NIF library not loaded").

rl_bind_image_texture(id, index, format, readonly) -> erlang:nif_error("NIF library not loaded").

rl_get_shader_buffer_size(id) -> erlang:nif_error("NIF library not loaded").

rl_copy_shader_buffer(dest_id, src_id, dest_offset, src_offset, count) -> erlang:nif_error("NIF library not loaded").

rl_bind_shader_buffer(id, index) -> erlang:nif_error("NIF library not loaded").

rl_unload_shader_buffer(ssbo_id) -> erlang:nif_error("NIF library not loaded").

rl_compute_shader_dispatch(group_x, group_y, group_z) -> erlang:nif_error("NIF library not loaded").

rl_load_compute_shader_program(shader_id) -> erlang:nif_error("NIF library not loaded").

rl_set_uniform_sampler(loc_index, texture_id) -> erlang:nif_error("NIF library not loaded").

rl_get_location_attrib(shader_id, attrib_name) -> erlang:nif_error("NIF library not loaded").

rl_get_location_uniform(shader_id, uniform_name) -> erlang:nif_error("NIF library not loaded").

rl_unload_shader_program(id) -> erlang:nif_error("NIF library not loaded").

rl_load_shader_program(v_shader_id, f_shader_id) -> erlang:nif_error("NIF library not loaded").

rl_compile_shader(shader_code, a_type) -> erlang:nif_error("NIF library not loaded").

rl_load_shader_code(vs_code, fs_code) -> erlang:nif_error("NIF library not loaded").

rl_unload_framebuffer(id) -> erlang:nif_error("NIF library not loaded").

rl_framebuffer_complete(id) -> erlang:nif_error("NIF library not loaded").

rl_framebuffer_attach(fbo_id, tex_id, attach_type, tex_type, mip_level) -> erlang:nif_error("NIF library not loaded").

rl_load_framebuffer(width, height) -> erlang:nif_error("NIF library not loaded").

rl_unload_texture(id) -> erlang:nif_error("NIF library not loaded").

rl_load_texture_depth(width, height, use_render_buffer) -> erlang:nif_error("NIF library not loaded").

rl_draw_vertex_array_instanced(offset, count, instances) -> erlang:nif_error("NIF library not loaded").

rl_draw_vertex_array(offset, count) -> erlang:nif_error("NIF library not loaded").

rl_set_vertex_attribute_divisor(index, divisor) -> erlang:nif_error("NIF library not loaded").

rl_unload_vertex_buffer(vbo_id) -> erlang:nif_error("NIF library not loaded").

rl_unload_vertex_array(vao_id) -> erlang:nif_error("NIF library not loaded").

rl_load_vertex_array() -> erlang:nif_error("NIF library not loaded").

rl_set_texture(id) -> erlang:nif_error("NIF library not loaded").

rl_check_render_batch_limit(v_count) -> erlang:nif_error("NIF library not loaded").

rl_draw_render_batch_active() -> erlang:nif_error("NIF library not loaded").

rl_get_shader_id_default() -> erlang:nif_error("NIF library not loaded").

rl_get_texture_id_default() -> erlang:nif_error("NIF library not loaded").

rl_get_framebuffer_height() -> erlang:nif_error("NIF library not loaded").

rl_set_framebuffer_height(height) -> erlang:nif_error("NIF library not loaded").

rl_get_framebuffer_width() -> erlang:nif_error("NIF library not loaded").

rl_set_framebuffer_width(width) -> erlang:nif_error("NIF library not loaded").

rl_get_version() -> erlang:nif_error("NIF library not loaded").

rlgl_close() -> erlang:nif_error("NIF library not loaded").

rlgl_init(width, height) -> erlang:nif_error("NIF library not loaded").

rl_set_blend_factors_separate(gl_src_rgb, gl_dst_rgb, gl_src_alpha, gl_dst_alpha, gl_eq_rgb, gl_eq_alpha) -> erlang:nif_error("NIF library not loaded").

rl_set_blend_factors(gl_src_factor, gl_dst_factor, gl_equation) -> erlang:nif_error("NIF library not loaded").

rl_set_blend_mode(mode) -> erlang:nif_error("NIF library not loaded").

rl_check_errors() -> erlang:nif_error("NIF library not loaded").

rl_clear_screen_buffers() -> erlang:nif_error("NIF library not loaded").

rl_is_stereo_render_enabled() -> erlang:nif_error("NIF library not loaded").

rl_disable_stereo_render() -> erlang:nif_error("NIF library not loaded").

rl_enable_stereo_render() -> erlang:nif_error("NIF library not loaded").

rl_disable_smooth_lines() -> erlang:nif_error("NIF library not loaded").

rl_enable_smooth_lines() -> erlang:nif_error("NIF library not loaded").

rl_get_line_width() -> erlang:nif_error("NIF library not loaded").

rl_set_line_width(width) -> erlang:nif_error("NIF library not loaded").

rl_disable_wire_mode() -> erlang:nif_error("NIF library not loaded").

rl_enable_point_mode() -> erlang:nif_error("NIF library not loaded").

rl_enable_wire_mode() -> erlang:nif_error("NIF library not loaded").

rl_scissor(x, y, width, height) -> erlang:nif_error("NIF library not loaded").

rl_disable_scissor_test() -> erlang:nif_error("NIF library not loaded").

rl_enable_scissor_test() -> erlang:nif_error("NIF library not loaded").

rl_set_cull_face(mode) -> erlang:nif_error("NIF library not loaded").

rl_disable_backface_culling() -> erlang:nif_error("NIF library not loaded").

rl_enable_backface_culling() -> erlang:nif_error("NIF library not loaded").

rl_disable_depth_mask() -> erlang:nif_error("NIF library not loaded").

rl_enable_depth_mask() -> erlang:nif_error("NIF library not loaded").

rl_disable_depth_test() -> erlang:nif_error("NIF library not loaded").

rl_enable_depth_test() -> erlang:nif_error("NIF library not loaded").

rl_disable_color_blend() -> erlang:nif_error("NIF library not loaded").

rl_enable_color_blend() -> erlang:nif_error("NIF library not loaded").

rl_blit_framebuffer(src_x, src_y, src_width, src_height, dst_x, dst_y, dst_width, dst_height, buffer_mask) -> erlang:nif_error("NIF library not loaded").

rl_active_draw_buffers(count) -> erlang:nif_error("NIF library not loaded").

rl_disable_framebuffer() -> erlang:nif_error("NIF library not loaded").

rl_enable_framebuffer(id) -> erlang:nif_error("NIF library not loaded").

rl_disable_shader() -> erlang:nif_error("NIF library not loaded").

rl_enable_shader(id) -> erlang:nif_error("NIF library not loaded").

rl_cubemap_parameters(id, param, value) -> erlang:nif_error("NIF library not loaded").

rl_texture_parameters(id, param, value) -> erlang:nif_error("NIF library not loaded").

rl_disable_texture_cubemap() -> erlang:nif_error("NIF library not loaded").

rl_enable_texture_cubemap(id) -> erlang:nif_error("NIF library not loaded").

rl_disable_texture() -> erlang:nif_error("NIF library not loaded").

rl_enable_texture(id) -> erlang:nif_error("NIF library not loaded").

rl_active_texture_slot(slot) -> erlang:nif_error("NIF library not loaded").

rl_disable_vertex_attribute(index) -> erlang:nif_error("NIF library not loaded").

rl_enable_vertex_attribute(index) -> erlang:nif_error("NIF library not loaded").

rl_disable_vertex_buffer_element() -> erlang:nif_error("NIF library not loaded").

rl_enable_vertex_buffer_element(id) -> erlang:nif_error("NIF library not loaded").

rl_disable_vertex_buffer() -> erlang:nif_error("NIF library not loaded").

rl_enable_vertex_buffer(id) -> erlang:nif_error("NIF library not loaded").

rl_disable_vertex_array() -> erlang:nif_error("NIF library not loaded").

rl_enable_vertex_array(vao_id) -> erlang:nif_error("NIF library not loaded").

rl_color4f(x, y, z, w) -> erlang:nif_error("NIF library not loaded").

rl_color3f(x, y, z) -> erlang:nif_error("NIF library not loaded").

rl_normal3f(x, y, z) -> erlang:nif_error("NIF library not loaded").

rl_tex_coord2f(x, y) -> erlang:nif_error("NIF library not loaded").

rl_vertex3f(x, y, z) -> erlang:nif_error("NIF library not loaded").

rl_vertex2f(x, y) -> erlang:nif_error("NIF library not loaded").

rl_vertex2i(x, y) -> erlang:nif_error("NIF library not loaded").

rl_end() -> erlang:nif_error("NIF library not loaded").

rl_begin(mode) -> erlang:nif_error("NIF library not loaded").

rl_viewport(x, y, width, height) -> erlang:nif_error("NIF library not loaded").

rl_scalef(x, y, z) -> erlang:nif_error("NIF library not loaded").

rl_rotatef(angle, x, y, z) -> erlang:nif_error("NIF library not loaded").

rl_translatef(x, y, z) -> erlang:nif_error("NIF library not loaded").

rl_load_identity() -> erlang:nif_error("NIF library not loaded").

rl_pop_matrix() -> erlang:nif_error("NIF library not loaded").

rl_push_matrix() -> erlang:nif_error("NIF library not loaded").

rl_matrix_mode(mode) -> erlang:nif_error("NIF library not loaded").

set_audio_stream_buffer_size_default(size) -> erlang:nif_error("NIF library not loaded").

get_master_volume() -> erlang:nif_error("NIF library not loaded").

set_master_volume(volume) -> erlang:nif_error("NIF library not loaded").

is_audio_device_ready() -> erlang:nif_error("NIF library not loaded").

close_audio_device() -> erlang:nif_error("NIF library not loaded").

init_audio_device() -> erlang:nif_error("NIF library not loaded").

draw_grid(slices, spacing) -> erlang:nif_error("NIF library not loaded").

text_to_integer(text) -> erlang:nif_error("NIF library not loaded").

text_find_index(text, find) -> erlang:nif_error("NIF library not loaded").

text_length(text) -> erlang:nif_error("NIF library not loaded").

text_is_equal(text1, text2) -> erlang:nif_error("NIF library not loaded").

get_codepoint_count(text) -> erlang:nif_error("NIF library not loaded").

measure_text(text, font_size) -> erlang:nif_error("NIF library not loaded").

set_text_line_spacing(spacing) -> erlang:nif_error("NIF library not loaded").

draw_text(text, pos_x, pos_y, font_size, color) -> erlang:nif_error("NIF library not loaded").

draw_fps(pos_x, pos_y) -> erlang:nif_error("NIF library not loaded").

get_pixel_data_size(width, height, format) -> erlang:nif_error("NIF library not loaded").

get_color(hex_value) -> erlang:nif_error("NIF library not loaded").

color_alpha_blend(dst, src, tint) -> erlang:nif_error("NIF library not loaded").

color_alpha(color, alpha) -> erlang:nif_error("NIF library not loaded").

color_contrast(color, contrast) -> erlang:nif_error("NIF library not loaded").

color_brightness(color, factor) -> erlang:nif_error("NIF library not loaded").

color_tint(color, tint) -> erlang:nif_error("NIF library not loaded").

color_from_hsv(hue, saturation, value) -> erlang:nif_error("NIF library not loaded").

color_to_int(color) -> erlang:nif_error("NIF library not loaded").

fade(color, alpha) -> erlang:nif_error("NIF library not loaded").

draw_texture_pro(texture, source, dest, origin, rotation, tint) -> erlang:nif_error("NIF library not loaded").

draw_texture_rec(texture, source, position, tint) -> erlang:nif_error("NIF library not loaded").

draw_texture_ex(texture, position, rotation, scale, tint) -> erlang:nif_error("NIF library not loaded").

draw_texture_v(texture, position, tint) -> erlang:nif_error("NIF library not loaded").

draw_texture(texture, pos_x, pos_y, tint) -> erlang:nif_error("NIF library not loaded").

set_texture_wrap(texture, wrap) -> erlang:nif_error("NIF library not loaded").

set_texture_filter(texture, filter) -> erlang:nif_error("NIF library not loaded").

unload_texture(texture) -> erlang:nif_error("NIF library not loaded").

is_texture_ready(texture) -> erlang:nif_error("NIF library not loaded").

load_texture(file_name) -> erlang:nif_error("NIF library not loaded").

check_collision_point_line(point, p1, p2, threshold) -> erlang:nif_error("NIF library not loaded").

check_collision_point_triangle(point, p1, p2, p3) -> erlang:nif_error("NIF library not loaded").

check_collision_point_circle(point, center, radius) -> erlang:nif_error("NIF library not loaded").

check_collision_point_rec(point, rec) -> erlang:nif_error("NIF library not loaded").

check_collision_circle_rec(center, radius, rec) -> erlang:nif_error("NIF library not loaded").

check_collision_circles(center1, radius1, center2, radius2) -> erlang:nif_error("NIF library not loaded").

check_collision_recs(rec1, rec2) -> erlang:nif_error("NIF library not loaded").

get_spline_point_bezier_cubic(p1, c2, c3, p4, t) -> erlang:nif_error("NIF library not loaded").

get_spline_point_bezier_quad(p1, c2, p3, t) -> erlang:nif_error("NIF library not loaded").

get_spline_point_catmull_rom(p1, p2, p3, p4, t) -> erlang:nif_error("NIF library not loaded").

get_spline_point_basis(p1, p2, p3, p4, t) -> erlang:nif_error("NIF library not loaded").

get_spline_point_linear(start_pos, end_pos, t) -> erlang:nif_error("NIF library not loaded").

draw_spline_segment_bezier_cubic(p1, c2, c3, p4, thick, color) -> erlang:nif_error("NIF library not loaded").

draw_spline_segment_bezier_quadratic(p1, c2, p3, thick, color) -> erlang:nif_error("NIF library not loaded").

draw_spline_segment_catmull_rom(p1, p2, p3, p4, thick, color) -> erlang:nif_error("NIF library not loaded").

draw_spline_segment_basis(p1, p2, p3, p4, thick, color) -> erlang:nif_error("NIF library not loaded").

draw_spline_segment_linear(p1, p2, thick, color) -> erlang:nif_error("NIF library not loaded").

draw_poly_lines_ex(center, sides, radius, rotation, line_thick, color) -> erlang:nif_error("NIF library not loaded").

draw_poly_lines(center, sides, radius, rotation, color) -> erlang:nif_error("NIF library not loaded").

draw_poly(center, sides, radius, rotation, color) -> erlang:nif_error("NIF library not loaded").

draw_triangle_lines(v1, v2, v3, color) -> erlang:nif_error("NIF library not loaded").

draw_triangle(v1, v2, v3, color) -> erlang:nif_error("NIF library not loaded").

draw_rectangle_rounded_lines(rec, roundness, segments, line_thick, color) -> erlang:nif_error("NIF library not loaded").

draw_rectangle_rounded(rec, roundness, segments, color) -> erlang:nif_error("NIF library not loaded").

draw_rectangle_lines_ex(rec, line_thick, color) -> erlang:nif_error("NIF library not loaded").

draw_rectangle_lines(pos_x, pos_y, width, height, color) -> erlang:nif_error("NIF library not loaded").

draw_rectangle_gradient_ex(rec, col1, col2, col3, col4) -> erlang:nif_error("NIF library not loaded").

draw_rectangle_gradient_h(pos_x, pos_y, width, height, color1, color2) -> erlang:nif_error("NIF library not loaded").

draw_rectangle_gradient_v(pos_x, pos_y, width, height, color1, color2) -> erlang:nif_error("NIF library not loaded").

draw_rectangle_pro(rec, origin, rotation, color) -> erlang:nif_error("NIF library not loaded").

draw_rectangle_rec(rec, color) -> erlang:nif_error("NIF library not loaded").

draw_rectangle_v(position, size, color) -> erlang:nif_error("NIF library not loaded").

draw_rectangle(pos_x, pos_y, width, height, color) -> erlang:nif_error("NIF library not loaded").

draw_ring_lines(center, inner_radius, outer_radius, start_angle, end_angle, segments, color) -> erlang:nif_error("NIF library not loaded").

draw_ring(center, inner_radius, outer_radius, start_angle, end_angle, segments, color) -> erlang:nif_error("NIF library not loaded").

draw_ellipse_lines(center_x, center_y, radius_h, radius_v, color) -> erlang:nif_error("NIF library not loaded").

draw_ellipse(center_x, center_y, radius_h, radius_v, color) -> erlang:nif_error("NIF library not loaded").

draw_circle_lines_v(center, radius, color) -> erlang:nif_error("NIF library not loaded").

draw_circle_lines(center_x, center_y, radius, color) -> erlang:nif_error("NIF library not loaded").

draw_circle_v(center, radius, color) -> erlang:nif_error("NIF library not loaded").

draw_circle_gradient(center_x, center_y, radius, color1, color2) -> erlang:nif_error("NIF library not loaded").

draw_circle_sector_lines(center, radius, start_angle, end_angle, segments, color) -> erlang:nif_error("NIF library not loaded").

draw_circle_sector(center, radius, start_angle, end_angle, segments, color) -> erlang:nif_error("NIF library not loaded").

draw_circle(center_x, center_y, radius, color) -> erlang:nif_error("NIF library not loaded").

draw_line_bezier(start_pos, end_pos, thick, color) -> erlang:nif_error("NIF library not loaded").

draw_line_ex(start_pos, end_pos, thick, color) -> erlang:nif_error("NIF library not loaded").

draw_line_v(start_pos, end_pos, color) -> erlang:nif_error("NIF library not loaded").

draw_line(start_pos_x, start_pos_y, end_pos_x, end_pos_y, color) -> erlang:nif_error("NIF library not loaded").

draw_pixel_v(position, color) -> erlang:nif_error("NIF library not loaded").

draw_pixel(pos_x, pos_y, color) -> erlang:nif_error("NIF library not loaded").

set_shapes_texture(texture, source) -> erlang:nif_error("NIF library not loaded").

get_gesture_pinch_angle() -> erlang:nif_error("NIF library not loaded").

get_gesture_pinch_vector() -> erlang:nif_error("NIF library not loaded").

get_gesture_drag_angle() -> erlang:nif_error("NIF library not loaded").

get_gesture_drag_vector() -> erlang:nif_error("NIF library not loaded").

get_gesture_hold_duration() -> erlang:nif_error("NIF library not loaded").

get_gesture_detected() -> erlang:nif_error("NIF library not loaded").

is_gesture_detected(gesture) -> erlang:nif_error("NIF library not loaded").

set_gestures_enabled(flags) -> erlang:nif_error("NIF library not loaded").

get_touch_point_count() -> erlang:nif_error("NIF library not loaded").

get_touch_point_id(index) -> erlang:nif_error("NIF library not loaded").

get_touch_position(index) -> erlang:nif_error("NIF library not loaded").

get_touch_y() -> erlang:nif_error("NIF library not loaded").

get_touch_x() -> erlang:nif_error("NIF library not loaded").

set_mouse_cursor(cursor) -> erlang:nif_error("NIF library not loaded").

get_mouse_wheel_move_v() -> erlang:nif_error("NIF library not loaded").

get_mouse_wheel_move() -> erlang:nif_error("NIF library not loaded").

set_mouse_scale(scale_x, scale_y) -> erlang:nif_error("NIF library not loaded").

set_mouse_offset(offset_x, offset_y) -> erlang:nif_error("NIF library not loaded").

set_mouse_position(x, y) -> erlang:nif_error("NIF library not loaded").

get_mouse_delta() -> erlang:nif_error("NIF library not loaded").

get_mouse_position() -> erlang:nif_error("NIF library not loaded").

get_mouse_y() -> erlang:nif_error("NIF library not loaded").

get_mouse_x() -> erlang:nif_error("NIF library not loaded").

is_mouse_button_up(button) -> erlang:nif_error("NIF library not loaded").

is_mouse_button_released(button) -> erlang:nif_error("NIF library not loaded").

is_mouse_button_down(button) -> erlang:nif_error("NIF library not loaded").

is_mouse_button_pressed(button) -> erlang:nif_error("NIF library not loaded").

set_gamepad_mappings(mappings) -> erlang:nif_error("NIF library not loaded").

get_gamepad_axis_movement(gamepad, axis) -> erlang:nif_error("NIF library not loaded").

get_gamepad_axis_count(gamepad) -> erlang:nif_error("NIF library not loaded").

get_gamepad_button_pressed() -> erlang:nif_error("NIF library not loaded").

is_gamepad_button_up(gamepad, button) -> erlang:nif_error("NIF library not loaded").

is_gamepad_button_released(gamepad, button) -> erlang:nif_error("NIF library not loaded").

is_gamepad_button_down(gamepad, button) -> erlang:nif_error("NIF library not loaded").

is_gamepad_button_pressed(gamepad, button) -> erlang:nif_error("NIF library not loaded").

is_gamepad_available(gamepad) -> erlang:nif_error("NIF library not loaded").

set_exit_key(key) -> erlang:nif_error("NIF library not loaded").

get_char_pressed() -> erlang:nif_error("NIF library not loaded").

get_key_pressed() -> erlang:nif_error("NIF library not loaded").

is_key_up(key) -> erlang:nif_error("NIF library not loaded").

is_key_released(key) -> erlang:nif_error("NIF library not loaded").

is_key_down(key) -> erlang:nif_error("NIF library not loaded").

is_key_pressed_repeat(key) -> erlang:nif_error("NIF library not loaded").

is_key_pressed(key) -> erlang:nif_error("NIF library not loaded").

stop_automation_event_recording() -> erlang:nif_error("NIF library not loaded").

start_automation_event_recording() -> erlang:nif_error("NIF library not loaded").

set_automation_event_base_frame(frame) -> erlang:nif_error("NIF library not loaded").

is_file_dropped() -> erlang:nif_error("NIF library not loaded").

is_path_file(path) -> erlang:nif_error("NIF library not loaded").

change_directory(dir) -> erlang:nif_error("NIF library not loaded").

get_file_length(file_name) -> erlang:nif_error("NIF library not loaded").

is_file_extension(file_name, ext) -> erlang:nif_error("NIF library not loaded").

directory_exists(dir_path) -> erlang:nif_error("NIF library not loaded").

file_exists(file_name) -> erlang:nif_error("NIF library not loaded").

set_trace_log_level(log_level) -> erlang:nif_error("NIF library not loaded").

open_url(url) -> erlang:nif_error("NIF library not loaded").

set_config_flags(flags) -> erlang:nif_error("NIF library not loaded").

take_screenshot(file_name) -> erlang:nif_error("NIF library not loaded").

get_random_value(min, max) -> erlang:nif_error("NIF library not loaded").

set_random_seed(seed) -> erlang:nif_error("NIF library not loaded").

poll_input_events() -> erlang:nif_error("NIF library not loaded").

swap_screen_buffer() -> erlang:nif_error("NIF library not loaded").

get_fps() -> erlang:nif_error("NIF library not loaded").

get_frame_time() -> erlang:nif_error("NIF library not loaded").

set_target_fps(fps) -> erlang:nif_error("NIF library not loaded").

end_vr_stereo_mode() -> erlang:nif_error("NIF library not loaded").

end_scissor_mode() -> erlang:nif_error("NIF library not loaded").

begin_scissor_mode(x, y, width, height) -> erlang:nif_error("NIF library not loaded").

end_blend_mode() -> erlang:nif_error("NIF library not loaded").

begin_blend_mode(mode) -> erlang:nif_error("NIF library not loaded").

end_shader_mode() -> erlang:nif_error("NIF library not loaded").

end_texture_mode() -> erlang:nif_error("NIF library not loaded").

end_mode3_d() -> erlang:nif_error("NIF library not loaded").

end_mode2_d() -> erlang:nif_error("NIF library not loaded").

end_drawing() -> erlang:nif_error("NIF library not loaded").

begin_drawing() -> erlang:nif_error("NIF library not loaded").

clear_background(color) -> erlang:nif_error("NIF library not loaded").

is_cursor_on_screen() -> erlang:nif_error("NIF library not loaded").

disable_cursor() -> erlang:nif_error("NIF library not loaded").

enable_cursor() -> erlang:nif_error("NIF library not loaded").

is_cursor_hidden() -> erlang:nif_error("NIF library not loaded").

hide_cursor() -> erlang:nif_error("NIF library not loaded").

show_cursor() -> erlang:nif_error("NIF library not loaded").

disable_event_waiting() -> erlang:nif_error("NIF library not loaded").

enable_event_waiting() -> erlang:nif_error("NIF library not loaded").

set_clipboard_text(text) -> erlang:nif_error("NIF library not loaded").

get_window_scale_dpi() -> erlang:nif_error("NIF library not loaded").

get_window_position() -> erlang:nif_error("NIF library not loaded").

get_monitor_refresh_rate(monitor) -> erlang:nif_error("NIF library not loaded").

get_monitor_physical_height(monitor) -> erlang:nif_error("NIF library not loaded").

get_monitor_physical_width(monitor) -> erlang:nif_error("NIF library not loaded").

get_monitor_height(monitor) -> erlang:nif_error("NIF library not loaded").

get_monitor_width(monitor) -> erlang:nif_error("NIF library not loaded").

get_monitor_position(monitor) -> erlang:nif_error("NIF library not loaded").

get_current_monitor() -> erlang:nif_error("NIF library not loaded").

get_monitor_count() -> erlang:nif_error("NIF library not loaded").

get_render_height() -> erlang:nif_error("NIF library not loaded").

get_render_width() -> erlang:nif_error("NIF library not loaded").

get_screen_height() -> erlang:nif_error("NIF library not loaded").

get_screen_width() -> erlang:nif_error("NIF library not loaded").

set_window_focused() -> erlang:nif_error("NIF library not loaded").

set_window_opacity(opacity) -> erlang:nif_error("NIF library not loaded").

set_window_size(width, height) -> erlang:nif_error("NIF library not loaded").

set_window_max_size(width, height) -> erlang:nif_error("NIF library not loaded").

set_window_min_size(width, height) -> erlang:nif_error("NIF library not loaded").

set_window_monitor(monitor) -> erlang:nif_error("NIF library not loaded").

set_window_position(x, y) -> erlang:nif_error("NIF library not loaded").

set_window_title(title) -> erlang:nif_error("NIF library not loaded").

restore_window() -> erlang:nif_error("NIF library not loaded").

minimize_window() -> erlang:nif_error("NIF library not loaded").

maximize_window() -> erlang:nif_error("NIF library not loaded").

toggle_borderless_windowed() -> erlang:nif_error("NIF library not loaded").

toggle_fullscreen() -> erlang:nif_error("NIF library not loaded").

clear_window_state(flags) -> erlang:nif_error("NIF library not loaded").

set_window_state(flags) -> erlang:nif_error("NIF library not loaded").

is_window_state(flag) -> erlang:nif_error("NIF library not loaded").

is_window_resized() -> erlang:nif_error("NIF library not loaded").

is_window_focused() -> erlang:nif_error("NIF library not loaded").

is_window_maximized() -> erlang:nif_error("NIF library not loaded").

is_window_minimized() -> erlang:nif_error("NIF library not loaded").

is_window_hidden() -> erlang:nif_error("NIF library not loaded").

is_window_fullscreen() -> erlang:nif_error("NIF library not loaded").

is_window_ready() -> erlang:nif_error("NIF library not loaded").

window_should_close() -> erlang:nif_error("NIF library not loaded").

close_window() -> erlang:nif_error("NIF library not loaded").

init_window(width, height, title) -> erlang:nif_error("NIF library not loaded").